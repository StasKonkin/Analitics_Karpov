step_1_lesson_7.csv
First, let's look at the distribution of site visits by day. Build a graph with the distribution of the number of visits from bots and regular users of Yandex.Metrika. The data for plotting the graph is stored here.

step_2_lesson_7.csv
Determine the percentage of visits to the Yandex.Metrics site from the Google Chrome browser. The data is stored here.
Round the answer to whole numbers.

step_3_lesson_7.csv
Let's find out which browser gets the most bots. Look at the data and determine which browser has the LARGEST proportion of bot visits to the site as a percentage of total visits?
Include the name of the browser as your answer.

step_4_lesson_7.csv
Aggregate the data by day, user type, browser, and create a column with a metric for the percentage of visits to the site for each of these sections.
In your answer, enter the percentage of times the site was opened by real Safari users (not bots) to 1 decimal place.
Hint: note, here you need to find the proportion of visits by specific types of users from a specific browser to all-all visits to the site for that day.

üíÄ Tough assignment! üíÄ
Using the gspread library, send the data from the previous step to Google SpreadSheet. Then send a link to the resulting file in Google SpreadSheet (don't forget to open access to the link, you can do it manually when the data is already poured into the table) using vk api to yourself in VKontakte. 

‚≠êÔ∏è Assignment with an asterisk! ‚≠êÔ∏è
Another analyst has already aggregated some of the data from the metric, and you need to combine efforts to get the final report. Read the additional data from Google SpreadSheet, merge your table from the previous step with the analyst's table and calculate the number of visits per person (visits to users ratio) broken down by browser and Robots/People values.
In your answer, indicate how many visits per unique user are made by bots from the Google Chrome browser (round up to integers)
This is how you can read another analyst's data:

from io import BytesIO
import requests
r = requests.get('https://docs.google.com/spreadsheets/d/e/2PACX-1vQWMsvBTVio9C7IOOxfFO9C15BRHyME-_ENHqBodDOjuiHwk9fCuF5hUVmDs497PZOqPYK3exdSikOK/pub?gid=1006633900&single=true&output=csv')
data = r.content

df = pd.read_csv(BytesIO(data))